%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 363 288
%%HiResBoundingBox: 0 0 362.2 287.2
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font KYOXWO+Helvetica
%!FontType1-1.0: KYOXWO+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /KYOXWO+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 56 /eight put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F861DED1CAA75F925F02C786B2AD87C35C507B2A992CE0BDFC7254D
08FB815E98D22DEA9901DC1A297C8C1A72DB12ABA98FF4535E450809A383468F
3414441807E061B0951CF54907C46A53E4221E4D3428F5B699BD50523E84AC01
D84FAAC4102E5BB4A1293652EF7572FFC1AFF303BA81B215AE2CEE4CACF9BD1F
451BA538D97407A7F8E92E19C592E035817CA4E7D0D1AEB4BFBE8D3843517897
B085AC5FF4D4619A100261E1189E5F2582727A476BD80BEB739212BF3C180097
133BE32958E5EFB4FA29C4BB5BFBE67DDCDFA36ECA59D25389EF5B873D44B410
96984619AA1A3961EA17A526E4B3AE9F05EAD5AB65E2F17F13C99C5397411860
818C00787555C1A52912D2E6F45309FC473F0BB570D08BD6EFF48BCF7012C906
91A78465551206C176CCC5F041CB340D30FFB95D0F05E4DA764FC5349A18C3BC
02100BE9F9E5E2E316E8FBA01457F716EDE85FBC3F5AF0D7712DCB79E5041A76
88139A98D367B89680588E45A86ABF4D410B5D5C3BAA7509DFC55BEEA499A739
7631F9FB24AAD2366D7ECBAD7A0A04660B507C81953794245DA2D62075453C09
24838D1905C0D74FD1A051E582AFE18A7D3D067BD97E4810D2C2D04216F2D558
6E3987CE162D2EF04DA625782C9BD415D7D73CD00F955FF6F6A649A4D8CE0D53
976BA95C16ED034A6DC6443A97D14F93610321659427A0650C3C1ECE9E76B108
E9ABE9E83A5CC7C3CCE1848FA7390927ACE198D72EA004047A118FD59EF24B69
9A381008A9AE7CF439669190A818E640C8FD8B7BD5994A8B650FBEA40C06D24D
FD7D7D4437DBC8CBC7471E2FC3CF684D84E36572E4BF802AF78E343A904B9BD0
A0295B7BA2F63B6982B5ADE9D583074995898EB63FE4D4284C9875D2D7634BD1
E465196F8B05AFA9BD3F681A0F05E153EDC1A5A1118177F72A4F6B62749634DF
0AC2C2B574F7FA0F52883273F26F0E50887DC8F3C07E8754021E3285CA938990
45946BBB26420EFC03DB071D7F167E33964209425C9BE1DD97EAAB900416180C
2E1A59ECDDD822C4C916D5488C2D88C4EA9920FBF972DA38DC81935553903BAB
DB7D63A544F68079F4531BE73E539CBED5650B720C6643FB5D869978DBEA3159
F1558E017D202549519E8B885530AA4B61A26973463D5D1B5D91AB368A5B999E
A0F0285F6097045C6CD9BABC276A8C731D3140440B0767228559C455C3B2B057
E1903F4AA6EDAE29DEA52923D9B04D23E9A83C5D4AEF6995F979DD8DCDFCED6B
C7704BC01F30F0EC0CCC4FD720E4625B500CCF7C176D97FB146C4F818A5867C3
69CC5A08A8F7E9D03197C43BCDCDC0986C88CD9250EFE042EF9DD89805CD8355
390CB859CFF0584DD51B80506EF9530B187C005303BF9A362BD29FC60F1F0118
7E3B202000AA5F82D33D08372C395804A11F8D3B6270C4D6DC0E74922C6670F0
81FB9C1D5CF23DF45F1C0DBA8CD657CAE201BCEB8A167323723C4FCA324800C7
D27073E3E63EC1FECB3AC3D25318DD428C80E9539942E65B746695B8F6247836
272A03006F6A2230AE1BC735FF36995F450EAAA716941732979AFD1BAB849E77
B9655C1872DFC3C8FBD282B384BF78CCF4EE3796AB3BDD2A77FC509F87DD167F
8F70E5D8143F042B6CF19696F58F3146FA1F978BC8D16A7C819BD4A8987752C9
C970BB60313BB63645AA0E09E86F4F506FDF698F6AB69E85C4FD00A90D678998
D202289BB69034B2308EA5B9755E4C52A580852141A92E15EBD94317C07E0E7D
ABB5EC1B578FA78EC342839167EC30DD386EEC59EA648179665BB2A71AD7E40E
9E8039C8CAD2472490620A94465E31694B791EFB6A082DE0BAA4AF16C4B93AE0
6A0025917D521B28A863AD570A18B50F0A5B3887E02D491A101559A9C4676157
7B2E3A1BDFC6A9B5898536DBDBE868CA6E9A82EFDED68DA9EB4FD9D43388D7F3
883A5CFCCCD114EF18588A08BBCBD8FD701811DA1D987991DA35B9CDC68C3204
6C86D662613D4E760A7F77826DBF6BE5EA00F1A7563F29976999717E11F4813D
C2A86AEEA8B56FCC4E3AD0DF6EE32D14381B3FFE3DCBD34BAC3E15D3920F0EE6
808F3277F176D65C94B902079B20E152B1F375008BCCBF86FD453BAC9C38EC40
973E75263593B4874D4E4AF2FEA58B4068D692D0A4F53DA0691B8C0D651D6F39
FDECF7DA284A88CACA6DBDDF57847CA17116E993AF0096F4DD2186C5E81D015C
1A6D66D6EE9DD79C783D7FBE5EE0A4E0A6A2AF0D28D789ADF3656C0AA9F3445C
F3365543B902B2A3504C7E6359483061669ACCA088509DEAE38F3A7E8C65D883
F5C3BA89056EF88065A382CA01B3A33B2F07420C41A7A72FAF6FB32CFD036A3C
A85565321B735F3D154533B33DE8B99404CCBEFD5792B297C5BE800FE27B913D
FCF15D0233F8898F329D3997D22688CD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /KYOXWO+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 362.2 287.2 re
W
q
q
[1 0 0 1 -19.9 -8.9] cm
q
[1 0 0 1 0 0] cm
0 0 420 316 re
W
q
[0.1 0 0 0.1 0 0] cm
q
0 8.33203 4200 3151.67 re
W
/DeviceGray {} cs
[1] sc
0 8.33203 4200 3151.67 re
f
546.668 355 3258.33 2568.33 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
546.668 355 3258.332 2568.33 re
S
/DeviceGray {} CS
[0] SC
546.668 2923.33 m
3805 2923.33 l
S
546.668 355 m
3805 355 l
S
3805 355 m
3805 2923.33 l
S
546.668 355 m
546.668 2923.33 l
S
546.668 355 m
3805 355 l
S
546.668 355 m
546.668 2923.33 l
S
546.668 355 m
546.668 388.332 l
S
546.668 2923.33 m
546.668 2890.83 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 51.9168 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
1198.33 355 m
1198.33 388.332 l
S
1198.33 2923.33 m
1198.33 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 112.917 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.2)
[5.56
0
2.78
0
5.56
0] Tj
Q
1850 355 m
1850 388.332 l
S
1850 2923.33 m
1850 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 178.083 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.4)
[5.56
0
2.78
0
5.56
0] Tj
Q
2501.67 355 m
2501.67 388.332 l
S
2501.67 2923.33 m
2501.67 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 243.25 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.6)
[5.56
0
2.78
0
5.56
0] Tj
Q
3153.33 355 m
3153.33 388.332 l
S
3153.33 2923.33 m
3153.33 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 308.417 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.8)
[5.56
0
2.78
0
5.56
0] Tj
Q
3805 355 m
3805 388.332 l
S
3805 2923.33 m
3805 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 377.75 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(1)
[5.56
0] Tj
Q
546.668 355 m
579.168 355 l
S
3805 355 m
3771.67 355 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 31.8332] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
546.668 869.168 m
579.168 869.168 l
S
3805 869.168 m
3771.67 869.168 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.3332 83.25] Tm
0 0 Td
/F8_0 10 Tf
(0.05)
[5.56
0
2.78
0
5.56
0
5.56
0] Tj
Q
546.668 1382.5 m
579.168 1382.5 l
S
3805 1382.5 m
3771.67 1382.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 37.9168 134.583] Tm
0 0 Td
/F8_0 10 Tf
(0.1)
[5.56
0
2.78
0
5.56
0] Tj
Q
546.668 1896.67 m
579.168 1896.67 l
S
3805 1896.67 m
3771.67 1896.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.3332 186] Tm
0 0 Td
/F8_0 10 Tf
(0.15)
[5.56
0
2.78
0
5.56
0
5.56
0] Tj
Q
546.668 2410 m
579.168 2410 l
S
3805 2410 m
3771.67 2410 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 37.9168 237.333] Tm
0 0 Td
/F8_0 10 Tf
(0.2)
[5.56
0
2.78
0
5.56
0] Tj
Q
546.668 2923.33 m
579.168 2923.33 l
S
3805 2923.33 m
3771.67 2923.33 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 32.3332 288.667] Tm
0 0 Td
/F8_0 10 Tf
(0.25)
[5.56
0
2.78
0
5.56
0
5.56
0] Tj
Q
546.668 2923.33 m
3805 2923.33 l
S
546.668 355 m
3805 355 l
S
3805 355 m
3805 2923.33 l
S
546.668 355 m
546.668 2923.33 l
S
Q
q
546.668 354.168 3259.162 2569.162 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
546.668 355.832 m
627.5 2637.5 l
709.168 1352.5 l
790.832 908.332 l
872.5 777.5 l
953.332 660 l
1035 585 l
1116.67 540.832 l
1198.33 500.832 l
1279.17 472.5 l
1360.83 450 l
1442.5 430.832 l
1524.17 416.668 l
1605 404.168 l
1686.67 395 l
1768.33 387.5 l
1850 380.832 l
1930.83 375.832 l
2012.5 371.668 l
2094.17 368.332 l
2175.83 365.832 l
2256.67 364.168 l
2338.33 362.5 l
2420 360.832 l
2501.67 360 l
2582.5 359.168 l
2664.17 358.332 l
2745.83 357.5 l
2827.5 357.5 l
2908.33 356.668 l
3071.67 356.668 l
3153.33 355.832 l
3805 355.832 l
S
Q
q
0 8 4200 3152 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 201.917 11.5] Tm
0 0 Td
/F8_0 10 Tf
(time \(t\))
[2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
3.33
0
2.78
0
3.33
0] Tj
[0 1 -1 0 25.5 153.25] Tm
0 0 Td
/F8_0 10 Tf
(error)
[5.56
0
3.33
0
3.33
0
5.56
0
3.33
0] Tj
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font KYOXWO+Helvetica
%%EOF

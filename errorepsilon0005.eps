%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 350 300
%%HiResBoundingBox: 0 0 349.2 299.2
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font SUFDIX+Helvetica
%!FontType1-1.0: SUFDIX+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /SUFDIX+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /minus put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3F872B092288AB4E433417193564C10FF9F9378064D49B1A2A5D9E93
46F3FFECD0339573F12C83BEB7F11877A6E2D8183B4E41EA7F659D0359C8785E
F31F89AD86BA142E43C49CC89FE8F3DADC4348A2AE6370EDAC47F19C7DB73403
6470704F93C1F806BD3262D11A60B8F112A65BE88274CD16923161CABEFF0BD3
2EC86077AEB0B753BE29B3880CDB1F1749039D2213F4B85EE5E10EC5AA88A609
1BEC8466884B6BA84BFD9536FC5F99CA8D018EF9FE96B4FD3E7AB00B50A851DB
52E3D619E4D2A3E481E285E7A4E35F9265806A6E943C0443FE1115781F4BD3F9
6E361CD7CE3ECAA7BAD57D136EF041A1CBB2E707CADDBEDEA5EA1EBBA8C0F643
0A5FE012240B0B181C14FCE16859CFEDC64810AAAA85D2DC1EA956A62E6C6110
4331C5685D262C8783CD16326E759529E3118171719570E6F8FE2325B10F9441
C067669BB17712B6099865E9098BF2F6022881AD4E76981F1C3287CCACE7D57F
63847B4E62C6F23F2EE95FB16D7B5B306EA6C34EDA9F23256AACA6E7BF29B145
DA9EFAC42105A2DE6B8FA7F02AB136F1763B44858FD7A0F994A817A466E754FB
677815EEFFB794FC0F24D6581971CEB2245D3E6FF9E11175D79B78DB8A50CA91
07F54B42580E8CEC89935E982664A1A70A2F361DB6AC8DAF746D7910BBCB3101
0A0022EE34AA3A284095A9533573538D6B5DEC8B527C64BDC3E4CEC329C8D2A2
343D33E67B288968879F15C280D31B8D8CD0B15DD24D79A23AD0992E1B174C23
BC54DD7D51E6C55B50B1FB1F77DFDEA186044E4069331CE778E4B71107080377
C82A3AA53CB7AF3D528F65FA4D800714874FED46AEE685D19A54AFB359939003
2E7B4AFD66E73298FF951DD6797415B58ED052C57013D59F8EA600AF5B43C237
767EAF38BC756B7C24115D426ADCD57C0E34196ABFC738E2252E019A02CB2545
C815792B279219D234191869BFDA6817A04D2205A65802E0948E7E38DA8BF042
030ADD47DCC8DBB6D93951DB543AD99EFCB3084BED7A8C5BCD673D8B018A58B7
55E81A51872C46D4EF8498C82AC082E1DCDA1664B9B52A38B51C2E90E296DA7D
968E5DE795ECCF8DC1D92409E58342D592AED999B59B24CCA6A356FFAAC37F03
ECE8E03A17F53B935F5DAF7E2DD1A0F5FC701E9A49C56E844CF6B85749A8CD95
A96340BD90C45AA5ED5E3267661EC2D1E5DC2BA4A67771040E61DC9D8415E066
9D66C2EEBC8DA96AFCE3A3C13AC3521EBE350C46E75AB3251EBCB575CC95F309
A591289C767BD38F67B724EA912ED3DCDAFD5AEFB6DAC8D76AA7F62A74BF8E36
3E86879058730E687AE1AC166860BFEDC21CEC3301324BCBC6F3629DD7D9AEA0
69099FEC26E3126F0B9AD402A4EB4D0ED356E7AAB8138ADCB60BC7E6A527BCCC
1C4BF18378D2BE8077C4366DFD2309681AFAEF792629F7445C3591C4AD8EED14
7B2259FC4F6AF05BD215FFE72625408A9CD7EE90047B55812FC852EBE1A024E1
9CBF3F3D0FC4C359E7EA4C9445CF8E63715A3C28190BCB3BAD761ADDA9954FAE
199CAEC1E9647C9C58BD7F18A32C8466E3D92EC0E7588B36F69BD0E6B98B5F8F
670340A83E8C1CD5CF1558D4FBA7C59E87F66BBCD8F078B9C49E7C501AAE26D0
BB3CE98565897E52A3713F32D25DD179002C397CFC4117DACE9162E41C032EDE
F57A6E259E452D39D0144FB7E1014544A67AB47805B0443C24D27D0AE1CFB06B
5F0F3B38AC743CDFA55F4EC34DF80D70C82447182988E7FB8EC2B94D9AF6F207
2F6C6DE9EABBE764E8CE845F6BE900CC80EFDA10C9F785F8960DEFF8A96F6B0F
68E3410735EC9143D24D4B3D8B446B3D67456C1822F061BE176C6C25A462ED99
F5614D7921C3FEF54BF320DDDEDB17AF75A3E2474E9B8FDC9B35B46038AFE9F6
379F3C944EC915E57985AA3B2263425B883E6FB3CA9261D9142C5EFF16C09373
061566898DEE12F9FD2565C0CBF805FA4AD8FE0E8C03DEEDDB94AEC2A1411971
6EA8D8AF2CC5C6DDE97BCE2B8C117D3C1279BECDAEC3136B9DFA1E05C3DA424E
9E38141C456B0526C398B3CF7B6A5561F971040D29DDF3CF3C7F7F4C81FDE10D
0C0446EDB26A209A490BEFC8A98CDCA23CACBC01F6022B28FBB634A780C09A3C
2E6945B6174D2147F9C7DADCD4CF06AB67E0E864EF412A797768CEA4090EFE2B
3982F7487CB687CA51A7B526BB1D71FEEBF238F5EB1AC0C9EB4EFF461C377587
D430712E9CF8F1B16AAF7B399F3445AB548E2F2FBD3576D1BA6490A9E2D3B84A
1C99AF55830E4DF0C30F9682F49CED31A54F9FCE5CB4BF6CE540249E1070F7A0
B927BB9BE5D5887598D9FBDD6F0059512338CD45A4D8015CBAF36CF404E4BE49
80E4142D5DDD3ADB640EDF39A8B1182F400D4AF63683F5888A262369C2529B31
0862EF6D67F706AC00C5E5397D9A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /SUFDIX+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 349.2 299.2 re
W
q
q
[1 0 0 1 -32.9 -8.9] cm
q
[1 0 0 1 0 0] cm
0 0 420 316 re
W
q
[0.1 0 0 0.1 0 0] cm
q
0 8.33203 4200 3151.67 re
W
/DeviceGray {} cs
[1] sc
0 8.33203 4200 3151.67 re
f
546.668 355 3258.33 2568.33 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
546.668 355 3258.332 2568.33 re
S
/DeviceGray {} CS
[0] SC
546.668 2923.33 m
3805 2923.33 l
S
546.668 355 m
3805 355 l
S
3805 355 m
3805 2923.33 l
S
546.668 355 m
546.668 2923.33 l
S
546.668 355 m
3805 355 l
S
546.668 355 m
546.668 2923.33 l
S
546.668 355 m
546.668 388.332 l
S
546.668 2923.33 m
546.668 2890.83 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 51.9168 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
1198.33 355 m
1198.33 388.332 l
S
1198.33 2923.33 m
1198.33 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 112.917 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.2)
[5.56
0
2.78
0
5.56
0] Tj
Q
1850 355 m
1850 388.332 l
S
1850 2923.33 m
1850 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 178.083 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.4)
[5.56
0
2.78
0
5.56
0] Tj
Q
2501.67 355 m
2501.67 388.332 l
S
2501.67 2923.33 m
2501.67 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 243.25 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.6)
[5.56
0
2.78
0
5.56
0] Tj
Q
3153.33 355 m
3153.33 388.332 l
S
3153.33 2923.33 m
3153.33 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 308.417 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.8)
[5.56
0
2.78
0
5.56
0] Tj
Q
3805 355 m
3805 388.332 l
S
3805 2923.33 m
3805 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 377.75 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(1)
[5.56
0] Tj
Q
546.668 355 m
579.168 355 l
S
3805 355 m
3771.67 355 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 31.8332] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
546.668 1211.67 m
579.168 1211.67 l
S
3805 1211.67 m
3771.67 1211.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 117.5] Tm
0 0 Td
/F8_0 10 Tf
(1)
[5.56
0] Tj
Q
546.668 2067.5 m
579.168 2067.5 l
S
3805 2067.5 m
3771.67 2067.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 203.083] Tm
0 0 Td
/F8_0 10 Tf
(2)
[5.56
0] Tj
8.4168 93.75 Td
(x 10)
[5
0
2.78
0
5.56
0
5.56
0] Tj
27.25 99.9168 Td
/F8_0 6.66667 Tf
(-4)
[3.893335
0
3.706669
0] Tj
Q
546.668 2923.33 m
3805 2923.33 l
S
546.668 355 m
3805 355 l
S
3805 355 m
3805 2923.33 l
S
546.668 355 m
546.668 2923.33 l
S
Q
q
546.668 354.168 3259.162 2569.162 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
546.668 355.832 m
627.5 470.832 l
709.168 583.332 l
790.832 690.832 l
872.5 795.832 l
953.332 896.668 l
1035 994.168 l
1116.67 1088.33 l
1198.33 1179.17 l
1279.17 1267.5 l
1360.83 1352.5 l
1442.5 1434.17 l
1524.17 1513.33 l
1605 1590 l
1686.67 1664.17 l
1768.33 1735.83 l
1850 1805 l
1930.83 1871.67 l
2012.5 1935.83 l
2094.17 1997.5 l
2175.83 2057.5 l
2256.67 2115.83 l
2338.33 2170.83 l
2420 2225 l
2501.67 2276.67 l
2582.5 2327.5 l
2664.17 2375 l
2745.83 2421.67 l
2827.5 2466.67 l
2908.33 2510 l
2990 2551.67 l
3071.67 2592.5 l
3153.33 2630.83 l
3234.17 2668.33 l
3315.83 2704.17 l
3397.5 2738.33 l
3479.17 2771.67 l
3560 2804.17 l
3641.67 2835 l
3723.33 2864.17 l
3805 2892.5 l
S
Q
q
0 8 4200 3152 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 201.917 11.5] Tm
0 0 Td
/F8_0 10 Tf
(time \(t\))
[2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
3.33
0
2.78
0
3.33
0] Tj
[0 1 -1 0 39.4168 153.25] Tm
0 0 Td
/F8_0 10 Tf
(error)
[5.56
0
3.33
0
3.33
0
5.56
0
3.33
0] Tj
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font SUFDIX+Helvetica
%%EOF

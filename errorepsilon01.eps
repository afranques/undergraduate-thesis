%!PS-Adobe-3.0 EPSF-3.0
%XpdfVersion: 3.03
%%Creator: TeX
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 350 300
%%HiResBoundingBox: 0 0 349.2 299.2
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.03 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  2 array astore
  /setpagedevice where {
    pop 2 dict begin
      /PageSize exch def
      /ImagingBBox null def
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 2 lt {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font XIDZBJ+Helvetica
%!FontType1-1.0: XIDZBJ+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (Copyright \(URW\)++,Copyright 1999 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /XIDZBJ+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -212 762 729] readonly def
/StrokeWidth 0 def
/UniqueID 5020902 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /minus put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 101 /e put
dup 105 /i put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF3029BA9CDC574CE92C96CB7F7EB09200A6B1EDB6E92C5D4E
A60D07DF489BED2B34E84D9F993E34182B0ACA4851CDBD352659242F9BAE94A9
CF3902B79F3D036CD8910627BD9899627BA6EA8F2987DB12373189C36BB091BB
E1FDEC7555721801651068DBE178BF0FB10CE961AAE763822D13FD26873F196D
472190BF3C61B819D43039764D974E2CD27D64BA38F5D7B4D9986DE0A12DACD3
574A6133EF35AF5C179790C1AF487C30D3361C437AD7C134995A02697BDD3D60
8D9F70C60CED6817473D1F9D8467193811564A1E519085483BDF08A44F2AD5FA
FDE1750E67D46FFB7F272CBF545DF018B800A5844BB0AE3650181EA40F006343
F70106DED14B203020DB5AC541C1B7C82F455EE03227BFDE8417EB9357D764C0
6911F05739F60B25D6CE0568E84DDFED53CE59922F7C75427BD8BF4E5C11F0A8
EB766220169B4F4F81C341961AA06DB774A0A283FFEA584FF8D4C63057D7B797
26ACD54BDD2806A2296B24DA680A35E0041485EABB51F1668918D180BD9DE161
5487196C548C209D8774651FA4FBC45A9870575BCBC31AB0BF56F33CAA5D3E7E
E69066A1203419F06E2A630DD0421B1657C63B6C92B6088877DA46DE6C56DFBB
4B7068E935BF6FBB3010828B38DE2A51B48E7FFFC72DA8A124FF80B3A2575549
65A350D9B5803F914D6BEDB3FE17049DB2B1A99E68C4D77841B77853E54D3101
D9710951981DD4BA31AC8BF251576510EA74B6A4B9E4BF1907A824A20FFEF4A8
88FD18292A2000F4CAFD92CFBF9AF9FCEE48FE1E129CE51C607A63697DE2654C
DDE8186014DF60320960553F9665689A907901470B5CE06D6859675290351018
76A5F22AE1AFF9B6EDF4B95338A618ADCA30EE0406FB08AD84F804C094531283
C66E876E6568AFAD73EA72EF7D378372FE3CC337DA52032F5E95B41CDEF177E2
C2A6BB1EF97289BDEE3BD7F8D114CB5A068F893E64411E92D182A28225F9C715
05688BCC62012646CBAC92639396074EC45B956EC09D789CF3FA8F86A0DFDAA7
B8374C601016399B7FF1F92218993627C0B1DB5EC04F3019D53D05072ED1ECB2
3326AE03F24C8725F698047A1311F6E245070B8DBCF13393B1C1A74175484472
A2766C2F101BBC9BE56CC3CD4E2B7ECB4503612B9F2A808C59CD6EA68F98DD65
64F8A8EAE0169EF635C281A06BD6CB9206E95C8FFD0D8D46CE5F915B651D918F
A86B10EB98BCDCF9337F1F0E10E0BC08C0A828E8997AA79FDDE32B1CB3E43556
73E05F599AB8E86909C4A4E2082BB6C9C253C34D6566BF7CD4EDC931C741DCC7
9B8DA903A1215C2E11DFDAFE5BE1E01ED26DEC36912442BB22FA661DCA11BE74
BC5408AB5DEA4617422299B1463421EE399C3779A39DF68EDA0678235DAC1D0B
A14C9F3D0BB79D8A93692307EC01E88814C6616E2439E5EDF76F42FE0C4B359C
415AAD8F0F5EE69E03EF5E8B78B5FBC4D840AD5D7FA8563A08186B78603823E9
C3F42CDFB39DEC9BEC1664856543269F29DE19EA45C4F00E3AA3E38608F8B557
6D5848571C271D6821F14838637E8EA4B89397FEAC77F864B0CFA13D6070DCAC
AE78DC6C7FC6F79E1988BEA4511F81C2B0FF8D2BEC3A2B58441DC16880952A9F
4424CAF985ADB87609805FA382EB4CFE78011F0815F977130C0873C4B2E5C2B6
398B0D31AE41E3CD0DC1197FC7DBFB5957CEA64FF99DD28D131310AA49237D12
9FC86E476B47187AD8BDFA571099EABE030F5BF37DEE9067FE153BA4CBDFA9B8
DB938D1655941221454A69B5283DCE9621E3BAAFA89981D4E41B73138C7C65AF
03D62447AB21C10B8F1BB93574A82CBB3917D5634E4B1EDFC84B9D335E02F72D
0DEFD21B54A5B63B149250602F3498F3D152CCA95463079DC2B8A7DF9AA66CF9
4CAB5250AF10C0DA0568D0CBAA3477C4BABF07B4671FB96D0531ADB9B9DE25B4
6284CE0EEB8A68BEF627662B047FA22FF2EC2CD2DFC5FA1C1EF099769DA243D8
FCE526B16A70128ECDDFD2A04D4A0E59BFC50EBB0A249813DF36EE5BA2514214
F5F455A52E8F5D2B5131048A7F89F0807DABC534E108A8C74AB201721357783B
51A14CB8C598EF10D18EB98427A9D87C659F8F6429183A5ED179D19EAB83160A
F306228155858728794DCA6FDD57153709940F62DCA982A6E1CB73BE9085571B
F64987BE78C863925E401CB9783B78BBB8A8B3CAB969196DE307DB4F47C45AD5
A96E0631EA3DC535F8D97592D3DD5CC86AB69C7BDFB13C06F7005962A289C0EB
398C2EBB3170CE7DAC5BBE6C5B3C05F26941635E718035116E8CB4C47AE9E0D6
F9AB714EA53FCBAFC1B65BD4AE7950A396E3661DE5CE23895F28C296B5489007
C51C851633CD138573617C6F31731E36A42ED2274C4038F801775D4DF7BDCE29
F7D46E29CB7BF27C4E482D673E8329AB74135F125B973593F551F51004A20D8A
5ADFBB31002A9C413CCAD41CA926B6A886C5A5131D8EBA5914932E64382D9F72
0A70659EBFEFDF7EAF4D86FF34AB83058E45348861FB5D239D6591818B2A6DD3
D69CADCC2B38F59187F50C338E56CCD14C3B9F08B7E3E242A7588930EA0E8F27
AA1287736BB8151EAA492178C436A6F1D0E0E27A1F8B3CC73A1410EF68CC530D
CBFE1645D505C522A88F2844E23C62494C22828EB78D4A4DC251B4F5266F03C3
4D2C6187626F3C423EF64687C1147CEBB10D640D0D187F4F021B9A0516323AF4
EC10F70C067DC91A3A211D73AB91CF83EA494502636BD8808212A7B25A8FC768
462595DE2FD998E44CF048EBC74C243484C6DA5EA40B08996F8EFCE6E6F35C74
C29E1C2D00D69FF5A306C4C9B01CBEF30D20D1E4B91A8A756DD608F12FA7A015
F8232C8FD1DFEB11E0E5DD9C729C1F97840E702043130461CD5AF3DD573DF0DC
85FF2979F5323F478E24D007292D36F56125EE4F5A5BF55AC8E1617F78C89D97
8F3EE18DBC628D23F5852F9C16871EC1734405FB399849B50D6F0BA43F6AA4A4
91419CE839EA9DFB5E9DDEFAAF65E4CB89DF27254263560C803AAFF8D274C8B1
A268DBF76EFE1B07153C687A1E984B29D4DE92A80FF1849451BC4BEB97F367CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /XIDZBJ+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/minus/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 349.2 299.2 re
W
q
q
[1 0 0 1 -32.9 -8.9] cm
q
[1 0 0 1 0 0] cm
0 0 420 316 re
W
q
[0.1 0 0 0.1 0 0] cm
q
0 8.33203 4200 3151.67 re
W
/DeviceGray {} cs
[1] sc
0 8.33203 4200 3151.67 re
f
546.668 355 3258.33 2569.17 re
f*
5 w
1 j
/DeviceGray {} CS
[1] SC
546.668 355 3258.332 2569.17 re
S
/DeviceGray {} CS
[0] SC
546.668 2924.17 m
3805 2924.17 l
S
546.668 355 m
3805 355 l
S
3805 355 m
3805 2924.17 l
S
546.668 355 m
546.668 2924.17 l
S
546.668 355 m
3805 355 l
S
546.668 355 m
546.668 2924.17 l
S
546.668 355 m
546.668 388.332 l
S
546.668 2923.33 m
546.668 2890.83 l
S
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 51.9168 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
1198.33 355 m
1198.33 388.332 l
S
1198.33 2923.33 m
1198.33 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 112.917 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.2)
[5.56
0
2.78
0
5.56
0] Tj
Q
1850 355 m
1850 388.332 l
S
1850 2923.33 m
1850 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 178.083 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.4)
[5.56
0
2.78
0
5.56
0] Tj
Q
2501.67 355 m
2501.67 388.332 l
S
2501.67 2923.33 m
2501.67 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 243.25 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.6)
[5.56
0
2.78
0
5.56
0] Tj
Q
3153.33 355 m
3153.33 388.332 l
S
3153.33 2923.33 m
3153.33 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 308.417 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(0.8)
[5.56
0
2.78
0
5.56
0] Tj
Q
3805 355 m
3805 388.332 l
S
3805 2923.33 m
3805 2890.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 377.75 23.4168] Tm
0 0 Td
/F8_0 10 Tf
(1)
[5.56
0] Tj
Q
546.668 355 m
579.168 355 l
S
3805 355 m
3771.67 355 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 31.8332] Tm
0 0 Td
/F8_0 10 Tf
(0)
[5.56
0] Tj
Q
546.668 722.5 m
579.168 722.5 l
S
3805 722.5 m
3771.67 722.5 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 68.5832] Tm
0 0 Td
/F8_0 10 Tf
(1)
[5.56
0] Tj
Q
546.668 1089.17 m
579.168 1089.17 l
S
3805 1089.17 m
3771.67 1089.17 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 105.25] Tm
0 0 Td
/F8_0 10 Tf
(2)
[5.56
0] Tj
Q
546.668 1455.83 m
579.168 1455.83 l
S
3805 1455.83 m
3771.67 1455.83 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 141.917] Tm
0 0 Td
/F8_0 10 Tf
(3)
[5.56
0] Tj
Q
546.668 1823.33 m
579.168 1823.33 l
S
3805 1823.33 m
3771.67 1823.33 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 178.667] Tm
0 0 Td
/F8_0 10 Tf
(4)
[5.56
0] Tj
Q
546.668 2190 m
579.168 2190 l
S
3805 2190 m
3771.67 2190 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 215.333] Tm
0 0 Td
/F8_0 10 Tf
(5)
[5.56
0] Tj
Q
546.668 2556.67 m
579.168 2556.67 l
S
3805 2556.67 m
3771.67 2556.67 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 252] Tm
0 0 Td
/F8_0 10 Tf
(6)
[5.56
0] Tj
Q
546.668 2923.33 m
579.168 2923.33 l
S
3805 2923.33 m
3771.67 2923.33 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 46.25 288.667] Tm
0 0 Td
/F8_0 10 Tf
(7)
[5.56
0] Tj
8.4168 8.16641 Td
(x 10)
[5
0
2.78
0
5.56
0
5.56
0] Tj
27.25 14.33321 Td
/F8_0 6.66667 Tf
(-3)
[3.893335
0
3.706669
0] Tj
Q
546.668 2924.17 m
3805 2924.17 l
S
546.668 355 m
3805 355 l
S
3805 355 m
3805 2924.17 l
S
546.668 355 m
546.668 2924.17 l
S
Q
q
546.668 354.168 3259.162 2569.162 re
W
5 w
1 j
/DeviceRGB {} CS
[0 0 1] SC
546.668 355.832 m
627.5 1785 l
709.168 2472.5 l
790.832 2775 l
872.5 2871.67 l
953.332 2855.83 l
1035 2779.17 l
1116.67 2695.83 l
1198.33 2634.17 l
1279.17 2554.17 l
1360.83 2465 l
1442.5 2370 l
1524.17 2273.33 l
1605 2178.33 l
1686.67 2085.83 l
1768.33 1995.83 l
1850 1910.83 l
1930.83 1829.17 l
2012.5 1760.83 l
2094.17 1703.33 l
2175.83 1647.5 l
2256.67 1593.33 l
2338.33 1540.83 l
2420 1490.83 l
2501.67 1443.33 l
2582.5 1397.5 l
2664.17 1353.33 l
2745.83 1312.5 l
2827.5 1272.5 l
2908.33 1235 l
2990 1199.17 l
3071.67 1169.17 l
3153.33 1141.67 l
3234.17 1115 l
3315.83 1089.17 l
3397.5 1064.17 l
3479.17 1040 l
3560 1017.5 l
3641.67 995 l
3723.33 974.168 l
3805 953.332 l
S
Q
q
0 8 4200 3152 re
W
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 201.917 11.5] Tm
0 0 Td
/F8_0 10 Tf
(time \(t\))
[2.78
0
2.22
0
8.33
0
5.56
0
2.78
0
3.33
0
2.78
0
3.33
0] Tj
[0 1 -1 0 39.4168 153.25] Tm
0 0 Td
/F8_0 10 Tf
(error)
[5.56
0
3.33
0
3.33
0
5.56
0
3.33
0] Tj
Q
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font XIDZBJ+Helvetica
%%EOF
